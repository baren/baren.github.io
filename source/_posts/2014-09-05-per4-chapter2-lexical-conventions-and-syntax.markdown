---
layout: post
title: "python词法约定和语法(PER4 chapter 2)"
date: 2014-02-08 10:33::21 +0800
comments: true
categories: python
---


# 行结构和缩进

python中，每一行用换行符来结束，如果一行太长，可以使用*行继续操作符“\”*来分割，比如：

```python
a = math.cos(3 * (x - n)) + \ 
	math.sin(3 * (y - n))
```

在(...), [...], {...}, """..."""和'''...'''之间的代码，如果跨越多行，可以不用这个操作符。

如果函数、条件、循环或者类的代码体只有一行语句，可以放在同一行中，比如：

```
if a:	statement1
else:	statement2
```

如果多个语句放在一行，可以使用";"来分割。

<!-- more -->

# 标识符

* 以下划线开头的标识符是不会被导入语句`from module import *`导入的。
* 前后有两个下划线的标识符（比如`__init__`），是为特殊方法保留的。
* 前面有两个下划线的标识符（比如`__bar`），为了实现私有的类成员。

# 数字字面量

有四种数字类型：

* 布尔
* 整数
* 浮点数
* 复数

作为布尔值的True和False被解释成1和0.

除了十进制，还可以把整数指定为八进制、十六进制和二进制，分别用前缀0、0x和0b（比如：0644, 0x100fea8, or 0b11101010）

python的整数没有限制，可以任意写。

# 字符串字面量

字符串字面常量使用单引号（'）、双引号（"）或者三个引号（'''或者"""）括起来。

在字面常量内，反斜线（\）字符可以被用来特殊字符比如换行，反斜线自己，引号和不能打印的字符。如果转义字符不能识别，则保留原样。

除了\r \n等常用的转移字符外，几个不常用的列到下：

* \OOO				八进制值，后面三个数字。（\000 到 \377，\377的十进制值是255）
* \uxxxx			Unicode字符，x是十六进制字符（\u0000到\uffff）
* \Uxxxxxxxx		Unicode字符（\U00000000到\Uffffffff）
* \xhh				十六进制值（\x00到\xff，\xff的值是255）

\OOO和\xhh的用法是在字符串内嵌入不能够容易的打出的字符（控制字符，不能打印字符，符号和国际化字符等）。比如：

如果写字符串“Jalapeño”，可以"Jalape\xf1o" \xf1就是字符ñ。

在python 2中，字符串字面量对应的是8-bit的字符或者说面向字节的数据。为了能够使用国际化字符集，需要在字符串前面前缀一个字符“u”

不管使用哪种字符串，可以使用\u或者\U来嵌入一个国际化字符到字符串中。

原始字符串，在字符串前缀一个“r”字符。原始字符串中，所有的反斜线字符串都不转义，原样保存。这种字符串，多用在正则表达式中。

如果一个字符串前缀既有u又有r，则r必须在u之后。比如`ur"\\u1234"`

注意：
> 当使用utf-8和utf-16对字符串字面量进行编码时，不能够使用原始的byte的数据，比如直接写一个utf-8编码的字符串字面量'Jalape\xc3\xb1o'，以为简单的表示9个字符。
> 但是实际上可能不是想的那样。因为在utf-8编码中，多个byte序列\xc3\xb1表示单一字符U+00F1。而不是这两个字符U+00C3 和 U+00B1。
> 为了能让这样的字符串进行编码，需要在字符串前面前缀一个字符“b”，比如：b"Jalape\xc3\xb1o"。

>正常情况下，很少用到这种（byte literals）字符串字面常量

# 文档字符串
模块、类和函数的第一行语句是个字符串，那这个字符串变成这个对象的文档字符串。比如：

```python
def fact(n):
	"This function computes a factorial" 
	if (n <= 1): return 1
	else: return n * fact(n - 1)
```

```
>>> print fact.__doc__
This function computes a factorial 
>>>
```

# 源代码编码

为了让python的源代码以不同的编码方式编码，需要在源代码的前面两行包含：

```python
#!/usr/bin/env python 
# -*- coding: UTF-8 -*-
s = "Jalapeño" # String in quotes is directly encoded in UTF-8.
```
当这样指定后，注释、字符串字面量，可以直接在识别unicode的编辑器中输入。但是其它的，包括标识符，都必须是ascii的字符。



